{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\furka\\\\Desktop\\\\react_native\\\\kutuphaneSistemi\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [user, setUser] = useState(null);\n  const verifyToken = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setIsAuthenticated(false);\n      setUser(null);\n      return;\n    }\n    try {\n      const response = await axios.get('http://localhost:5000/api/auth/verify', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.user.role === 'superadmin') {\n        setIsAuthenticated(true);\n        setUser(response.data.user);\n      } else {\n        throw new Error('Yetkisiz erişim');\n      }\n    } catch (error) {\n      console.error('Token doğrulama hatası:', error);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n  useEffect(() => {\n    verifyToken();\n  }, []);\n  const login = async credentials => {\n    try {\n      console.log('Login attempt:', credentials);\n      const response = await axios.post('http://localhost:5000/api/auth/login', credentials);\n      console.log('Login response:', response.data);\n      if (response.data.user.role === 'superadmin') {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        setIsAuthenticated(true);\n        setUser(response.data.user);\n        return {\n          success: true\n        };\n      } else {\n        console.log('Invalid role:', response.data.user.role);\n        return {\n          success: false,\n          message: 'Sadece süper admin kullanıcıları giriş yapabilir'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Login error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Giriş başarısız'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      verifyToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"znKd5ksp1cKag9o/0V3zqkWkCsE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","verifyToken","token","localStorage","getItem","response","get","headers","Authorization","data","role","Error","error","console","removeItem","login","credentials","log","post","setItem","JSON","stringify","success","message","_error$response","_error$response2","_error$response2$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/furka/Desktop/react_native/kutuphaneSistemi/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const verifyToken = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/auth/verify', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      if (response.data.user.role === 'superadmin') {\r\n        setIsAuthenticated(true);\r\n        setUser(response.data.user);\r\n      } else {\r\n        throw new Error('Yetkisiz erişim');\r\n      }\r\n    } catch (error) {\r\n      console.error('Token doğrulama hatası:', error);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyToken();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      console.log('Login attempt:', credentials);\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', credentials);\r\n      console.log('Login response:', response.data);\r\n      \r\n      if (response.data.user.role === 'superadmin') {\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('user', JSON.stringify(response.data.user));\r\n        setIsAuthenticated(true);\r\n        setUser(response.data.user);\r\n        return { success: true };\r\n      } else {\r\n        console.log('Invalid role:', response.data.user.role);\r\n        return { success: false, message: 'Sadece süper admin kullanıcıları giriş yapabilir' };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error.response?.data || error);\r\n      return { success: false, message: error.response?.data?.message || 'Giriş başarısız' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout, verifyToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}